package lk.solution.health.excellent.resource.service;import lk.solution.health.excellent.common.interfaces.AbstractService;import lk.solution.health.excellent.resource.dao.MedicalPackageDao;import lk.solution.health.excellent.resource.entity.Enum.MedicalPackageStatus;import lk.solution.health.excellent.resource.entity.MedicalPackage;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.cache.annotation.Cacheable;import org.springframework.data.domain.Example;import org.springframework.data.domain.ExampleMatcher;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;@Servicepublic class MedicalPackageService implements AbstractService<MedicalPackage, Integer> {    private final MedicalPackageDao medicalPackageDao;    @Autowired    public MedicalPackageService(MedicalPackageDao medicalPackageDao) {        this.medicalPackageDao = medicalPackageDao;    }    @Transactional    public List<MedicalPackage> findAll() {        return medicalPackageDao.findAll();    }    @Cacheable(value = "medicalPackage")    public MedicalPackage findById(Integer id) {        return medicalPackageDao.getOne(id);    }    @Transactional    public MedicalPackage persist(MedicalPackage medicalPackage) {        return medicalPackageDao.save(medicalPackage);    }    @Transactional    public boolean delete(Integer id) {        medicalPackageDao.deleteById(id);        return false;    }    @Transactional    public List<MedicalPackage> search(MedicalPackage medicalPackage) {        ExampleMatcher matcher = ExampleMatcher                .matching()                .withIgnoreCase()                .withStringMatcher(ExampleMatcher.StringMatcher.CONTAINING);        Example<MedicalPackage> medicalPackageExample = Example.of(medicalPackage, matcher);        return medicalPackageDao.findAll(medicalPackageExample);    }    @Transactional    public List<MedicalPackage> openMedicalPackage(MedicalPackageStatus val) {        return medicalPackageDao.findByMedicalPackageStatus(val);    }}